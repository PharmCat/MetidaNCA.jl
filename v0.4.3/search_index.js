var documenterSearchIndex = {"docs":
[{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/#Main","page":"API","title":"Main","text":"","category":"section"},{"location":"api/#nca!","page":"API","title":"nca!","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"MetidaNCA.nca!","category":"page"},{"location":"api/#MetidaNCA.nca!","page":"API","title":"MetidaNCA.nca!","text":"nca!(data::DataSet{Subj}; adm = :ev, calcm = :lint, intpm = nothing, verbose = 0, warn = true, io::IO = stdout, modify! = identity) where Subj <: AbstractSubject\n\nNon-compartmental (NCA) analysis of PK/PD data.\n\n\n\n\n\nnca!(data::PKSubject{T,O}; adm = :ev, calcm = :lint, intpm = nothing, verbose = 0, warn = true, io::IO = stdout, modify! = nothing) where T where O\n\nadm - administration:\n:ev - extra vascular;\n:iv - intravascular bolus;\ncalcm - AUC/AUMC calculation method:\n:lint - linear trapezoidal;\n:logt - log-trapezoidal after Tmax;\n:luld - linar up log down;\n:luldt - linear up log down after Tmax;\nintpm - interpolation method:\n:lint - linear trapezoidal;\n:logt - log-trapezoidal after Tmax;\n:luld - linar up log down;\n:luldt - linear up log down after Tmax;\nverbose - print to io, 1: partial areas table, 2: 1, and results;\nwarn - show warnings;\nio - output stream;\nmodify! - function to modify output paramaters, call modify!(data, result) if difined.\n\nResults:\n\nCmax\nTmax\nCdose\nTlag\nClast\nAUClast\nAUMClast\nAUCall\nRsq\nARsq\nKel\nHL\nLZint\nNpLZ\nClast_pred\nAUCinf\nAUCinf_pred\nAUMCinf\nAUMCinf_pred\nAUCpct\nMRTlast\nMRTinf\nMRTinf_pred\nCllast\nClinf\nVzlast\nVzinf\nVssinf\n\nStable state (tau used):\n\nAUCtau\nAUMCtau\nCtau\nCavg\nCtaumin\nAccind\nFluc\nFluctau\nSwing\nSwingtau\nMRTtauinf\nCltau\nVztau\n\n\n\n\n\nnca!(data::UPKSubject{T, O, VOL, V}; adm = :ev, calcm = :lint, intpm = nothing, verbose = 0, warn = true, io::IO = stdout, modify! = identity) where T where O where VOL where V\n\nNon-compartmental (NCA) analysis of pharmacokinetic for urine data.\n\nResults:\n\nAUCall\nAUClast\nRlast\nMaxrate\nTmax\nAR\nVol\nPrec\nARsq\nRsq\nKel\nLZ\nLZint\nRsqn\nHL\nAUCinf\n\n\n\n\n\nnca!(data::PDSubject{T,O}; calcm = :lint, intpm = nothing, verbose = 0, warn = true, io::IO = stdout, modify! = identity, kwargs...) where T where O\n\nNon-compartmental (NCA) analysis of pharmacodynamic data.\n\nResults:\n\nRmax - max responce;\nTmax - time for maximum responce;\nAUCABL - AUC above baseline;\nAUCBBL - AUC below baseline;\nAUCATH - AUC above threshold;\nAUCBTH - AUC below threshold;\nTABL - time above baseline;\nTBBL - time below baseline;\nTATH - time above threshold;\nTBTH - time below threshold;\nAUCBTW - AUC between baseline and threshold;\n\n\n\n\n\n","category":"function"},{"location":"api/#nca","page":"API","title":"nca","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"MetidaNCA.nca","category":"page"},{"location":"api/#MetidaNCA.nca","page":"API","title":"MetidaNCA.nca","text":"nca(args...; kelauto = true,  elimrange = ElimRange(), dosetime = DoseTime(), kwargs...)\n\nnca(data, time, conc, sort; kelauto = true,  elimrange = ElimRange(), dosetime = DoseTime(), kwargs...)\n\nnca(data, time, conc; kelauto = true,  elimrange = ElimRange(), dosetime = DoseTime(), kwargs...)\n\nnca(time, conc; kelauto = true,  elimrange = ElimRange(), dosetime = DoseTime(), kwargs...)\n\nImport data and perform NCA analysis.\n\nSyntax simillar to pkimport\n\nApplicable kwargs see  nca!.\n\n\n\n\n\n","category":"function"},{"location":"api/#pkimport","page":"API","title":"pkimport","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"MetidaNCA.pkimport","category":"page"},{"location":"api/#MetidaNCA.pkimport","page":"API","title":"MetidaNCA.pkimport","text":"pkimport(data, time, conc, sort;\n    kelauto = true,\n    elimrange = ElimRange(),\n    dosetime = DoseTime(),\n    limitrule::Union{Nothing, LimitRule} = nothing,\n    warn = true,\n    kwargs...)\n\nImport PK data from table data.\n\ntime - time column;\nconc - concentration column;\nsort - subject sorting columns.\n\nkeywords:\n\nkelauto - if true auto range settings, if false used kelstart/kelend from elimrange;\nelimrange - set elimination range settings;\ndosetime - set dose and dose time, by default dosetime = 0, dose is NaN;\nlimitrule - apply limitrule to subject;\nwarn - false for warnings supress.\n\nnote: Note\nIf time column have non-unique values - last pair time-concentration will be used.\n\n\n\n\n\npkimport(data, time, conc;\n    warn = true,\n    kwargs...)\n\nImport PK data from tabular data data, time - time column, conc - concentration column.\n\n\n\n\n\npkimport(time, conc;\n    kelauto = true,\n    elimrange = ElimRange(),\n    dosetime = DoseTime(),\n    id = Dict{Symbol, Any}(),\n    limitrule::Union{Nothing, LimitRule} = nothing,\n    warn = true,\n    kwargs...)\n\nImport PK data from time vector time and concentration vector conc.\n\n\n\n\n\n","category":"function"},{"location":"api/#upkimport","page":"API","title":"upkimport","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"MetidaNCA.upkimport","category":"page"},{"location":"api/#MetidaNCA.upkimport","page":"API","title":"MetidaNCA.upkimport","text":"upkimport(data, stime, etime, conc, vol, sort; kelauto = true,  elimrange = ElimRange(), dosetime = DoseTime())\n\nImport urine PK data from table data.\n\nstime - start time column;\netime - end time column;\nconc - concentration column;\nvol - volume column;\nsort - subject sorting columns.\n\n\n\n\n\nupkimport(data, stime, etime, conc, vol; kelauto = true,  elimrange = ElimRange(), dosetime = DoseTime())\n\nImport single urine PK data from table data.\n\nstime - start time column;\netime - end time column;\nconc - concentration column;\nvol - volume column.\n\n\n\n\n\nupkimport(stime, etime, conc, vol; kelauto = true,  elimrange = ElimRange(), dosetime = DoseTime())\n\nImport urine PK data from time vectors:\n\nstime - start times;\netime - end times;\nconc - concentrations;\nvol - volumes.\n\n\n\n\n\n","category":"function"},{"location":"api/#pdimport","page":"API","title":"pdimport","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"MetidaNCA.pdimport","category":"page"},{"location":"api/#MetidaNCA.pdimport","page":"API","title":"MetidaNCA.pdimport","text":"pdimport(data, time, obs, sort;\n    bl = 0,\n    th = 0,\n    limitrule::Union{Nothing, LimitRule} = nothing,\n    warn = true)\n\nImport pharmackodynamic data from table:\n\ndata - data table;\ntime - observation time;\nobs - observation value;\nsort - sorting columns.\n\nKeywords:\n\nbl - baseline;\nth - threshold;\nlimitrule - limit rule;\nwarn - warning supress if false.\n\n\n\n\n\npdimport(data, time, obs;\n    warn = true,\n    kwargs...)\n\nImport PD data from tabular data data, time - time column, obs - observations column.\n\n\n\n\n\npdimport(time, obs;\n    bl = 0,\n    th = 0,\n    id = Dict{Symbol, Any}(),\n    warn = true)\n\nImport PD data from time vector time and observations vector obs.\n\n\n\n\n\n","category":"function"},{"location":"api/#Types","page":"API","title":"Types","text":"","category":"section"},{"location":"api/#DoseTime","page":"API","title":"DoseTime","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"MetidaNCA.DoseTime","category":"page"},{"location":"api/#MetidaNCA.DoseTime","page":"API","title":"MetidaNCA.DoseTime","text":"DoseTime(dose::D, time::T, tau::TAU) where D <: Number where T <: Number where TAU <: Number\n\nDose settings.\n\ndose - dose;\ntime - dose time;\ntau - tau (τ);\n\nDose time set 0 by default.\n\n\n\n\n\n","category":"type"},{"location":"api/#ElimRange","page":"API","title":"ElimRange","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"MetidaNCA.ElimRange","category":"page"},{"location":"api/#MetidaNCA.ElimRange","page":"API","title":"MetidaNCA.ElimRange","text":"ElimRange(kelstart::Int, kelend::Int, kelexcl::Vector{Int})::ElimRange\n\nElimination settings for PK subject.\n\nkelstart - start point;\nkelend - end point;\nkelexcl - excluded points.\n\n\n\n\n\n","category":"type"},{"location":"api/#LimitRule","page":"API","title":"LimitRule","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"MetidaNCA.LimitRule","category":"page"},{"location":"api/#MetidaNCA.LimitRule","page":"API","title":"MetidaNCA.LimitRule","text":"LimitRule(lloq::T, btmax, atmax, nan, rm::Bool) where T <: Real\n\nLimitRule(;lloq = NaN, btmax = NaN, atmax = NaN, nan = NaN, rm::Bool = false)\n\nlloq - LLOQ - low limit of quantification;\nbtmax - value for points before Tmax;\natmat - values for points after Tmax;\nnan - values for replacing NaN;\nrm - if true, removee all NaN points.\n\nRule for PK subject.\n\nSTEP 1 (NaN step): replace all NaN and missing values with nan keyword value (if nan not NaN);\nSTEP 2 (LLOQ step): replace values below lloq with btmax value if this value befor Tmax or with atmax if this value after Tmax (if lloq not NaN);\nSTEP 3 (remove NaN): rm == true, then remove all NaN and missing values.\n\n\n\n\n\n","category":"type"},{"location":"api/#Functions","page":"API","title":"Functions","text":"","category":"section"},{"location":"api/#applylimitrule!","page":"API","title":"applylimitrule!","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"MetidaNCA.applylimitrule!","category":"page"},{"location":"api/#MetidaNCA.applylimitrule!","page":"API","title":"MetidaNCA.applylimitrule!","text":"applylimitrule!(data::Union{PKSubject, PDSubject}, rule::LimitRule)\n\nApply rule to PK subject .\n\nSTEP 1 (NaN step): replace all NaN and missing values with nan keyword value (if nan not NaN);\nSTEP 2 (LLOQ step): replace values below lloq with btmax value if this value befor Tmax or with atmax if this value after Tmax (if lloq not NaN);\nSTEP 3 (remove NaN): rm == true, then remove all NaN and missing values.\n\n\n\n\n\napplylimitrule!(f::Function, data::DataSet{T}, rule::LimitRule) where T <: Union{PKSubject, PDSubject}\n\nApply if f(subj) return  true.\n\n\n\n\n\napplylimitrule!(data::DataSet{T}, rule::LimitRule, ind::Int) where T <: Union{PKSubject, PDSubject}\n\nApply by ind.\n\n\n\n\n\napplylimitrule!(data::DataSet{T}, rule::LimitRule, inds::Union{Vector{Int}, UnitRange{Int}, Tuple{Vararg{Int}}}) where T <: Union{PKSubject, PDSubject}\n\nApply by inds.\n\n\n\n\n\napplylimitrule!(data::DataSet{T}, rule::LimitRule) where T <: Union{PKSubject, PDSubject}\n\nApply to all dataset.\n\n\n\n\n\napplylimitrule!(data::DataSet{T}, rule::LimitRule, sort::Dict) where T <: PKSubject\n\n\n\n\n\napplylimitrule!(time, obs, rule::LimitRule)\n\n\n\n\n\n","category":"function"},{"location":"api/#getbl","page":"API","title":"getbl","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"MetidaNCA.getbl","category":"page"},{"location":"api/#MetidaNCA.getbl","page":"API","title":"MetidaNCA.getbl","text":"getbl(data::T) where T <: PDSubject\n\n\n\n\n\n","category":"function"},{"location":"api/#getdosetime","page":"API","title":"getdosetime","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"MetidaNCA.getdosetime","category":"page"},{"location":"api/#MetidaNCA.getdosetime","page":"API","title":"MetidaNCA.getdosetime","text":"getdosetime(data::T) where T <: PKSubject\n\nReturn dosetime.\n\n\n\n\n\n","category":"function"},{"location":"api/#getkelauto","page":"API","title":"getkelauto","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"MetidaNCA.getkelauto","category":"page"},{"location":"api/#MetidaNCA.getkelauto","page":"API","title":"MetidaNCA.getkelauto","text":"getkelauto!(data::T) where T <: PKSubject\n\n\n\n\n\n","category":"function"},{"location":"api/#getkelrange","page":"API","title":"getkelrange","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"MetidaNCA.getkelrange","category":"page"},{"location":"api/#MetidaNCA.getkelrange","page":"API","title":"MetidaNCA.getkelrange","text":"getkelrange(data::T) where T <: PKSubject\n\n\n\n\n\n","category":"function"},{"location":"api/#getkeldata","page":"API","title":"getkeldata","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"MetidaNCA.getkeldata","category":"page"},{"location":"api/#MetidaNCA.getkeldata","page":"API","title":"MetidaNCA.getkeldata","text":"getkeldata(data::T) where T <: PKSubject\n\n\n\n\n\ngetkeldata(data::T) where T <: PKSubject\n\n\n\n\n\n","category":"function"},{"location":"api/#getth","page":"API","title":"getth","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"MetidaNCA.getth","category":"page"},{"location":"api/#MetidaNCA.getth","page":"API","title":"MetidaNCA.getth","text":"getth(data::T) where T <: PDSubject\n\n\n\n\n\n","category":"function"},{"location":"api/#pkplot","page":"API","title":"pkplot","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"MetidaNCA.pkplot","category":"page"},{"location":"api/#MetidaNCA.pkplot","page":"API","title":"MetidaNCA.pkplot","text":"pkplot(subj; ls = false, elim = false, xticksn = :auto, yticksn = :auto, kwargs...)\n\nPlot for subject\n\nls - concentration in log scale;\nelim - draw elimination curve;\nxticksn - number of ticks on x axis;\nyticksn - number of ticks on y axis;\n\nOther keywords:\n\nplotstyle - predefined plot style from PKPLOTSTYLE;\ndrawbl (false) - draw baseline, only for PDSubject;\ndrawth (false) - draw threshold, only for PDSubject;\n\n\n\n\n\npkplot(data::DataSet{T};\ntypesort::Union{Nothing, Symbol, AbstractVector{Symbol}} = nothing,\npagesort::Union{Nothing, Symbol, AbstractVector{Symbol}} = nothing,\nsort::Union{Nothing, Dict{Symbol}} = nothing,\nuylims::Bool = false,\nkwargs...) where T <: AbstractSubject\n\nPK plot for subject set.\n\ntypesort - sort on page by this id key;\npagesort - different pages by this id key;\nsort - use only subjects if sort ⊆ subject id;\nuylims - same ylims for all dataset.\n\n\n\n\n\n","category":"function"},{"location":"api/#setbl!","page":"API","title":"setbl!","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"MetidaNCA.setbl!","category":"page"},{"location":"api/#MetidaNCA.setbl!","page":"API","title":"MetidaNCA.setbl!","text":"setbl!(data::T, bl) where T <: PDSubject\n\nSet baseline for subject data.\n\n\n\n\n\nsetbl!(data::DataSet{T}, bl, ind::Int) where T <: PDSubject\n\n\n\n\n\nsetbl!(data::DataSet{T}, bl, inds::Union{Vector{Int}, UnitRange{Int}, Tuple{Vararg{Int}}})\n\n\n\n\n\nsetbl!(data::DataSet{T}, bl) where T <: PDSubject\n\n\n\n\n\nsetbl!(data::DataSet{T}, bl, sort::Dict) where T <: PDSubject\n\n\n\n\n\n","category":"function"},{"location":"api/#setdosetime!","page":"API","title":"setdosetime!","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"MetidaNCA.setdosetime!","category":"page"},{"location":"api/#MetidaNCA.setdosetime!","page":"API","title":"MetidaNCA.setdosetime!","text":"setdosetime!(data::T, dosetime::DoseTime) where T <: PKSubject\n\nSet dose time dosetime for subject data.\n\n\n\n\n\nsetdosetime!(data::DataSet{T}, dosetime::DoseTime, ind::Int) where T <: PKSubject\n\nind - index in DataSet.\n\n\n\n\n\nsetdosetime!(data::DataSet{T}, dosetime::DoseTime, inds::Union{Vector{Int}, UnitRange{Int}, Tuple{Vararg{Int}}}) where T <: PKSubject\n\ninds - indexes in DataSet.\n\n\n\n\n\nsetdosetime!(data::DataSet{T}, dosetime::DoseTime) where T <: PKSubject\n\nFor all subjects in DataSet.\n\n\n\n\n\nsetdosetime!(data::DataSet{T}, dosetime::DoseTime, sort::Dict) where T <: PKSubject\n\nSet dose time dosetime for subjects if sort ⊆ subject's id.\n\n\n\n\n\n","category":"function"},{"location":"api/#setkelauto!","page":"API","title":"setkelauto!","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"MetidaNCA.setkelauto!","category":"page"},{"location":"api/#MetidaNCA.setkelauto!","page":"API","title":"MetidaNCA.setkelauto!","text":"setkelauto!(data::T, kelauto::Bool) where T <: PKSubject\n\nSet range for elimination parameters calculation for subject.\n\ndata     - PK subject;\nkelauto  - value.\n\n\n\n\n\nsetkelauto!(data::DataSet{T}, kelauto::Bool, ind::Int) where T <: PKSubject\n\n\n\n\n\nsetkelauto!(data::DataSet{T}, kelauto::Bool, inds::Union{Vector{Int}, UnitRange{Int}, Tuple{Vararg{Int}}}) where T <: PKSubject\n\n\n\n\n\nsetkelauto!(data::DataSet{T}, kelauto::Bool) where T <: PKSubject\n\n\n\n\n\nsetkelauto!(data::DataSet{T}, kelauto::Bool, sort::Dict) where T <: PKSubject\n\n\n\n\n\n","category":"function"},{"location":"api/#setkelrange!","page":"API","title":"setkelrange!","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"MetidaNCA.setkelrange!","category":"page"},{"location":"api/#MetidaNCA.setkelrange!","page":"API","title":"MetidaNCA.setkelrange!","text":"setkelrange!(data::T, range::ElimRange{:point}; kelauto = false) where T <: PKSubject\n\nSet range for subject data. Set kelauto if possible.\n\n\n\n\n\nsetdosetime!(data::DataSet{T}, dosetime::DoseTime, ind::Int) where T <: PKSubject\n\n\n\n\n\nsetkelrange!(data::DataSet{T}, range::ElimRange{:point}, inds::Union{Vector{Int}, UnitRange{Int}, Tuple{Vararg{Int}}}; kelauto = false)\n\n\n\n\n\nsetkelrange!(data::DataSet{T}, range::ElimRange{:point}; kelauto = false) where T <: PKSubject\n\n\n\n\n\nsetkelrange!(data::DataSet{T}, range::ElimRange{:point}, sort::Dict; kelauto = false) where T <: PKSubject\n\n\n\n\n\n","category":"function"},{"location":"api/#setth!","page":"API","title":"setth!","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"MetidaNCA.setth!","category":"page"},{"location":"api/#MetidaNCA.setth!","page":"API","title":"MetidaNCA.setth!","text":"setth!(data::T, th) where T <: PDSubject\n\nSet threshold for subject data.\n\n\n\n\n\nsetth!(data::DataSet{T}, th, ind::Int) where T <: PDSubject\n\n\n\n\n\nsetth!(data::DataSet{T}, th, inds::Union{Vector{Int}, UnitRange{Int}, Tuple{Vararg{Int}}})\n\n\n\n\n\nsetth!(data::DataSet{T}, th) where T <: PDSubject\n\n\n\n\n\nsetth!(data::DataSet{T}, th, sort::Dict) where T <: PDSubject\n\n\n\n\n\n","category":"function"},{"location":"api/#timefilter","page":"API","title":"timefilter","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"MetidaNCA.timefilter","category":"page"},{"location":"api/#MetidaNCA.timefilter","page":"API","title":"MetidaNCA.timefilter","text":"timefilter(subj::PKSubject, time::AbstractRange)\n\nExclude all observation than not in time range.\n\n\n\n\n\ntimefilter(subj::PKSubject, time::Tuple{<:Number, <:Number})\n\nMake deepcopy of subj and remove all observations < time[1] or > time[2]. Then resize keldata to 0.\n\nIf any of points in elimination rage not in min/max time, then elimination settings reset.\n\n\n\n\n\ntimefilter(data::DataSet{<: PKSubject}, time)\n\nMake new DataSet with new filtered subjects.\n\n\n\n\n\n","category":"function"},{"location":"api/#Atomic","page":"API","title":"Atomic","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Warning Atomic functions: cmax, tmax, auc not exported, use import MetidaNCA: cmax, tmax, auc;.","category":"page"},{"location":"api/#auc","page":"API","title":"auc","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"MetidaNCA.auc","category":"page"},{"location":"api/#MetidaNCA.auc","page":"API","title":"MetidaNCA.auc","text":"auc(time::AbstractVector, obs::AbstractVector;  calcm = :lint)\n\nReturn AUC. All concentration points included in calculation.\n\ncalcm - AUC/AUMC calculation method:\n:lint - linear trapezoidal;\n:logt - log-trapezoidal after Tmax;\n:luld - linar up log down;\n:luldt - linear up log down after Tmax;\n\nnote: Note\nThis function doesn't contain NaN, missing or dosing time checks.\n\n\n\n\n\n","category":"function"},{"location":"api/#cmax","page":"API","title":"cmax","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"MetidaNCA.cmax","category":"page"},{"location":"api/#MetidaNCA.cmax","page":"API","title":"MetidaNCA.cmax","text":"cmax(time::AbstractVector, obs::AbstractVector)\n\nReturn Cmax\n\n\n\n\n\n","category":"function"},{"location":"api/#tmax","page":"API","title":"tmax","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"MetidaNCA.tmax","category":"page"},{"location":"api/#MetidaNCA.tmax","page":"API","title":"MetidaNCA.tmax","text":"tmax(time::AbstractVector, obs::AbstractVector)\n\nReturn Tmax\n\n\n\n\n\n","category":"function"},{"location":"details/#Details","page":"Details","title":"Details","text":"","category":"section"},{"location":"details/#Step-1","page":"Details","title":"Step 1","text":"","category":"section"},{"location":"details/","page":"Details","title":"Details","text":"Filter all values before dose time and NaN or missing values after last measurable concentration. If TAU set, calculate start and end timepoints for AUCtau.","category":"page"},{"location":"details/#Step-2","page":"Details","title":"Step 2","text":"","category":"section"},{"location":"details/","page":"Details","title":"Details","text":"Cmax, Tmax calculation. Interpolate NaN and missing values.","category":"page"},{"location":"details/","page":"Details","title":"Details","text":"note: Note\nIf more than one maximum - only first observation used for define Tmax.","category":"page"},{"location":"details/#Step-3","page":"Details","title":"Step 3","text":"","category":"section"},{"location":"details/","page":"Details","title":"Details","text":"Exclude interpolated points from calculation (add to excltime). Elimination parameters calculation.","category":"page"},{"location":"details/","page":"Details","title":"Details","text":"note: Note\nIf kelstart or kelend in excltime then kelauto set to true.","category":"page"},{"location":"details/","page":"Details","title":"Details","text":"note: Note\nIf kelauto is true than range of observations for elimination will start from Tmax if administration set as iv, and from next observation after Tmax in other cases.","category":"page"},{"location":"details/#Step-4","page":"Details","title":"Step 4","text":"","category":"section"},{"location":"details/","page":"Details","title":"Details","text":"Shift all time values by dose time.","category":"page"},{"location":"details/#Step-5","page":"Details","title":"Step 5","text":"","category":"section"},{"location":"details/","page":"Details","title":"Details","text":"Calculate dose concentration (Cdose).","category":"page"},{"location":"details/","page":"Details","title":"Details","text":"note: Note\nIf there is no concentration for dosing time:If administration set as iv if 1st observation > than 2nd and both > 0 - Dose concentration is log-extrapolated, else set as 1st observation.\nIf administration not iv, than if Tau used  Dose concentration set as minimal concentration, in other case set as 0.  ","category":"page"},{"location":"details/#Step-6","page":"Details","title":"Step 6","text":"","category":"section"},{"location":"details/","page":"Details","title":"Details","text":"Calculate areas.","category":"page"},{"location":"details/","page":"Details","title":"Details","text":"note: Note\nIf AUClast is 0, than AUClast, AUMClast and AUCall set as NaN, so other dependent parameters is NaN too.   ","category":"page"},{"location":"details/#Step-7","page":"Details","title":"Step 7","text":"","category":"section"},{"location":"details/","page":"Details","title":"Details","text":"Calculate steady-state parameters.","category":"page"},{"location":"details/","page":"Details","title":"Details","text":"note: Note\nIf end of tau interval lies between two observation, than interpolation used to compute Ctau and partial AUCs; intpm keyword used to define interpolation method. If end of tau interval lies after all observation, than extrapolation used to compute Ctau and partial AUCs. Extrapolation based on using elimination parameters.","category":"page"},{"location":"examples/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"ENV[\"GKSwstype\"] = \"nul\"","category":"page"},{"location":"examples/#Import","page":"Examples","title":"Import","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"Use pkimport to import PK data from table to subject set.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"using MetidaNCA, CSV, DataFrames;\n\npkdata2 = CSV.File(joinpath(dirname(pathof(MetidaNCA)), \"..\", \"test\", \"csv\",  \"pkdata2.csv\")) |> DataFrame\n\nds = pkimport(pkdata2, :Time, :Concentration, [:Subject, :Formulation]; dosetime = DoseTime(dose = 100, time = 0))\n\nsort!(ds, :Subject)","category":"page"},{"location":"examples/#NCA","page":"Examples","title":"NCA","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"Perform NCA analysis with nca!. Access to result set is similar to DataFrame or any table. Find parameter list here.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"dsnca = nca!(ds, adm = :ev, calcm = :lint)\n\ndsnca[:, :AUClast]","category":"page"},{"location":"examples/#Print-output","page":"Examples","title":"Print output","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"dsnca = nca!(ds[1], adm = :ev, calcm = :lint, verbose = 2);\n","category":"page"},{"location":"examples/#Plotting","page":"Examples","title":"Plotting","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"using Plots\n\np = pkplot(ds; typesort = :Subject, pagesort = nothing, sort = Dict(:Formulation => \"R\"))\n\npng(p, \"plot1.png\")\n\np = pkplot(ds; typesort = :Formulation, pagesort = nothing, legend = true)\n\npng(p, \"plot2.png\")\n\np = pkplot(ds; elim = true, ls = true)\n\npng(p[1], \"plot3.png\")\n\np = pkplot(ds; typesort = :Subject, pagesort = :Formulation)\n\npng(p[1], \"plot4.png\")","category":"page"},{"location":"examples/#Plot-1","page":"Examples","title":"Plot 1","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: )","category":"page"},{"location":"examples/#Plot-2","page":"Examples","title":"Plot 2","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: )","category":"page"},{"location":"examples/#Plot-3","page":"Examples","title":"Plot 3","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: )","category":"page"},{"location":"examples/#Plot-4","page":"Examples","title":"Plot 4","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: )","category":"page"},{"location":"examples/#Set-dose-time","page":"Examples","title":"Set dose time","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"You can set dose time with setdosetime! for whole subject set or for selected subjects.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"dt = DoseTime(dose = 200, time = 0)\n\nsetdosetime!(ds, dt, Dict(:Formulation => \"R\"))\n\ndsnca = nca!(ds)\n\ndsnca[:, :Dose]","category":"page"},{"location":"examples/#Set-range-for-elimination","page":"Examples","title":"Set range for elimination","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"By default no exclusion or range specified. With setkelrange! elimination range and exclusion can be specified for whole subject set or for any selected subjects.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"kr =  ElimRange(kelstart = 4, kelend = 12, kelexcl = Int[5,6])\n\nsetkelrange!(ds, kr, [1,2,3])\n\ndsnca = nca!(ds)\n\np = pkplot(ds[1]; elim = true)\n\npng(p, \"plot5.png\")\n\ngetkeldata(ds[1])","category":"page"},{"location":"examples/#Plot-5","page":"Examples","title":"Plot 5","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: )","category":"page"},{"location":"examples/#Without-import","page":"Examples","title":"Without import","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"You  can use nca for NCA analysis directly from tabular data.","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"\ndsnca = nca(pkdata2, :Time, :Concentration, [:Subject, :Formulation]; dosetime = DoseTime(dose = 100, time = 0))\n\nsort!(dsnca, :Subject)\n\ndsnca[:, :AUClast]","category":"page"},{"location":"examples/#PD-subject","page":"Examples","title":"PD subject","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"Use pdimport to import PD data from table to subject set.","category":"page"},{"location":"examples/#Import-and-NCA","page":"Examples","title":"Import & NCA","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"\npddata = CSV.File(joinpath(dirname(pathof(MetidaNCA)), \"..\", \"test\", \"csv\",  \"pddata.csv\")) |> DataFrame\n\npd =  MetidaNCA.pdimport(pddata, :time, :obs, :subj; bl = 1.5, th = 5.0)\n\nMetidaNCA.nca!(pd[1])","category":"page"},{"location":"examples/#PD-subject-plotting","page":"Examples","title":"PD subject plotting","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"\np = MetidaNCA.pkplot(pd[1], drawth = true, drawbl = true)\n\npng(p, \"plot6.png\")","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: )","category":"page"},{"location":"#MetidaNCA","page":"Home","title":"MetidaNCA","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = MetidaNCA","category":"page"},{"location":"","page":"Home","title":"Home","text":"Non-compartment pharmacokinetic analysis (NCA).","category":"page"},{"location":"","page":"Home","title":"Home","text":"*This program comes with absolutely no warranty. No liability is accepted for any loss and risk to public health resulting from use of this software.","category":"page"},{"location":"","page":"Home","title":"Home","text":"*Always validate software with known results before use.","category":"page"},{"location":"#NCA","page":"Home","title":"NCA","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pharmacokinetics, sometimes abbreviated as PK, is a branch of pharmacology dedicated to determine the fate of substances administered to a living organism.","category":"page"},{"location":"","page":"Home","title":"Home","text":"When analyzing pharmacokinetic data, one generally employs either model fitting using nonlinear regression analysis or non-compartmental analysis techniques (NCA). The method one actually employs depends on what is required from the analysis. If the primary requirement is to determine the degree of exposure following administration of a drug (such as AUC), and perhaps the drug's associated pharmacokinetic parameters, such as clearance, elimination half-life, T (max), C (max), etc., then NCA is generally the preferred methodology to use in that it requires fewer assumptions than model-based approaches.","category":"page"},{"location":"#Validation","page":"Home","title":"Validation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Validation report: validation_report.pdf.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Appendix 2: Appendix2.1.pdf, Appendix2.2.pdf, Appendix2.3.pdf, Appendix2.4.pdf, Appendix2.5.pdf.","category":"page"},{"location":"#Contents","page":"Home","title":"Contents","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\n        \"examples.md\",\n        \"parameters.md\",\n        \"api.md\",\n      ]\nDepth = 3","category":"page"},{"location":"#Reference","page":"Home","title":"Reference","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Makoid C, Vuchetich J, Banakar V (1996-1999), Basic Pharmacokinetics;\nGabrielsson and Weiner (1997), Pharmacokinetic and Pharmacodynamic Data Analysis: Concepts and Applications;\nGibaldi and Perrier (1982), Pharmacokinetics;\nWagner (1975), Fundamentals of Clinical Pharmacokinetics.\nGabrielsson J, Weiner D. Non-compartmental analysis. Methods Mol Biol. 2012;929:377-89. doi: 10.1007/978-1-62703-050-2_16. PMID: 23007438.","category":"page"},{"location":"parameters/#parameter_list","page":"Parameter list","title":"Parameter list","text":"","category":"section"},{"location":"parameters/#Basic-parameters","page":"Parameter list","title":"Basic parameters","text":"","category":"section"},{"location":"parameters/#:Cmax","page":"Parameter list","title":":Cmax","text":"","category":"section"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"Maximum concentration from dose time to dose time + tau (if tau > 0). Firs observation used.","category":"page"},{"location":"parameters/#:Tmax","page":"Parameter list","title":":Tmax","text":"","category":"section"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"Time at maximum concentration from dose time to dose time + tau (if tau > 0). Firs observation used.","category":"page"},{"location":"parameters/#:Cdose","page":"Parameter list","title":":Cdose","text":"","category":"section"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"By default dose time is 0. If concentration at dose time present in observation list - this concentration will be used. For extravascular setting (:ev) if τ used (τ > 0) Cdose set as minimum concentration from dose time to τ time :Ctaumin, else set equal to zero. For IV (:iv) if 1-st observation > 2-nd observation > 0 then logarithmic extrapolation used, else set equal to 1-st observation.","category":"page"},{"location":"parameters/#AUC-/-AUMC","page":"Parameter list","title":"AUC / AUMC","text":"","category":"section"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"Area under Curve / Area under the Moment Curve.","category":"page"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"AUC = sum_n=1^N AUC_n","category":"page"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"AUMC = sum_n=1^N AUMC_n","category":"page"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"Where AUCn/AUMCn- partial AUC/AUMC.","category":"page"},{"location":"parameters/#Linear-trapezoidal-rule","page":"Parameter list","title":"Linear trapezoidal rule","text":"","category":"section"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"AUCmid_t_1^t_2 = delta t times fracC_1 + C_22","category":"page"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"AUMCmid_t_1^t_2 = delta t times fract_1 times C_1 + t_2 times C_22","category":"page"},{"location":"parameters/#Logarithmic-trapezoidal-rule","page":"Parameter list","title":"Logarithmic trapezoidal rule","text":"","category":"section"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"AUCmid_t_1^t_2 =   delta t times frac C_2 - C_1ln(C_2C_1)","category":"page"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"AUMCmid_t_1^t_2 = delta t times fract_2 times C_2 - t_1 times C_1ln(C_2C_1) -  delta t^2 times frac C_2 - C_1ln(C_2C_1)^2","category":"page"},{"location":"parameters/#Interpolation","page":"Parameter list","title":"Interpolation","text":"","category":"section"},{"location":"parameters/#Linear-interpolation-rule","page":"Parameter list","title":"Linear interpolation rule","text":"","category":"section"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"C_x = C_1 + frac(t_x-t_1)times(C_2 - C_1)t_2 - t_1","category":"page"},{"location":"parameters/#Logarithmic-interpolation-rule","page":"Parameter list","title":"Logarithmic interpolation rule","text":"","category":"section"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"C_x = expleft(ln(C_1) + frac(t_x-t_1)times(ln(C_2) - ln(C_1))t_2 - t_1right)","category":"page"},{"location":"parameters/#:AUClast","page":"Parameter list","title":":AUClast","text":"","category":"section"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"Area under the curve from dose time to last observed concentration (>0).","category":"page"},{"location":"parameters/#:AUMClast","page":"Parameter list","title":":AUMClast","text":"","category":"section"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"Area under the Moment Curve from dose time to last observed concentration (>0). Dose time is the starting point for this calculation.","category":"page"},{"location":"parameters/#:AUCall","page":"Parameter list","title":":AUCall","text":"","category":"section"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"All values used to calculate AUC.","category":"page"},{"location":"parameters/#:Kel","page":"Parameter list","title":":Kel","text":"","category":"section"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"𝝺z - elimination constant. Linear regression at the terminal phase used for logarithmic transformed concentration data.","category":"page"},{"location":"parameters/#:HL","page":"Parameter list","title":":HL","text":"","category":"section"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"Half-Life; T1/2","category":"page"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"HL = ln(2)  lambda_z","category":"page"},{"location":"parameters/#:Rsq","page":"Parameter list","title":":Rsq","text":"","category":"section"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"Coefficient of determination (R²).","category":"page"},{"location":"parameters/#:ARsq","page":"Parameter list","title":":ARsq","text":"","category":"section"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"Adjusted coefficient of determination (R²).","category":"page"},{"location":"parameters/#:NpLZ","page":"Parameter list","title":":NpLZ","text":"","category":"section"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"Number of points for elimination calculation.","category":"page"},{"location":"parameters/#:MRTlast","page":"Parameter list","title":":MRTlast","text":"","category":"section"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"Mean residence time (MRT) from the dose time to the time of the last observed concentration.","category":"page"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"MRT_last = AUMC_last  AUC_last","category":"page"},{"location":"parameters/#If-:Kel-calculated","page":"Parameter list","title":"If :Kel calculated","text":"","category":"section"},{"location":"parameters/#:AUCinf","page":"Parameter list","title":":AUCinf","text":"","category":"section"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"AUC extrapolated from the last observed concentration to infinity.","category":"page"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"AUC_infty = AUC_last + fracC_lastlambda_z","category":"page"},{"location":"parameters/#:AUMCinf","page":"Parameter list","title":":AUMCinf","text":"","category":"section"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"AUMC extrapolated from the last observed concentration to infinity.","category":"page"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"AUMC_infty =  AUMC_last + fract_lasttimes C_lastlambda_z + fracC_lastlambda_z^2","category":"page"},{"location":"parameters/#:AUCpct","page":"Parameter list","title":":AUCpct","text":"","category":"section"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"Percentage of AUCinf due to extrapolation from the last observed concentration to infinity.","category":"page"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"AUCpct = (AUC_infty - AUC_last)  AUC_infty * 100 ","category":"page"},{"location":"parameters/#:AUCinf_pred","page":"Parameter list","title":":AUCinf_pred","text":"","category":"section"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"AUC extrapolated to infinity from the predicted concentration.","category":"page"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"AUC_infty pred = AUC_last + fracC_last predlambda_z","category":"page"},{"location":"parameters/#If-Dose-used","page":"Parameter list","title":"If Dose used","text":"","category":"section"},{"location":"parameters/#Clearance","page":"Parameter list","title":"Clearance","text":"","category":"section"},{"location":"parameters/#:Cllast","page":"Parameter list","title":":Cllast","text":"","category":"section"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"CL_last = Dose  AUC_last","category":"page"},{"location":"parameters/#:Clinf","page":"Parameter list","title":":Clinf","text":"","category":"section"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"Total body clearance for extravascular administration.","category":"page"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"CL_infty = Dose  AUC_infty","category":"page"},{"location":"parameters/#:Vzinf","page":"Parameter list","title":":Vzinf","text":"","category":"section"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"Volume of distribution based on the terminal phase.","category":"page"},{"location":"parameters/#Steady-state-parameters-(If-τ-used)","page":"Parameter list","title":"Steady-state parameters (If τ used)","text":"","category":"section"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"τ-time = dose_time + τ","category":"page"},{"location":"parameters/#:AUCtau","page":"Parameter list","title":":AUCtau","text":"","category":"section"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"Area under the curve from dose time to τ-time.","category":"page"},{"location":"parameters/#:AUMCtau","page":"Parameter list","title":":AUMCtau","text":"","category":"section"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"Area under the Moment Curve from the dose time to τ-time.","category":"page"},{"location":"parameters/#:Ctau","page":"Parameter list","title":":Ctau","text":"","category":"section"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"Concentration at τ-time.","category":"page"},{"location":"parameters/#:Ctaumin","page":"Parameter list","title":":Ctaumin","text":"","category":"section"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"Minimum concentration from the dose time to τ-time.","category":"page"},{"location":"parameters/#:Cavg","page":"Parameter list","title":":Cavg","text":"","category":"section"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"C_avg = AUC_tau  tau","category":"page"},{"location":"parameters/#:Fluc","page":"Parameter list","title":":Fluc","text":"","category":"section"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"Fluctuation","category":"page"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"Fluc = ( C_max - C_tau min )  C_avg * 100 ","category":"page"},{"location":"parameters/#:Fluctau","page":"Parameter list","title":":Fluctau","text":"","category":"section"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"Fluctuation Tau","category":"page"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"Fluctau = ( C_max - C_tau )  C_avg * 100 ","category":"page"},{"location":"parameters/#:Accind","page":"Parameter list","title":":Accind","text":"","category":"section"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"Accumulation index.","category":"page"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"Accind = frac11 - exp(-lambda_z tau)","category":"page"},{"location":"parameters/#:MRTtauinf","page":"Parameter list","title":":MRTtauinf","text":"","category":"section"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"MRT_tauinf = (AUMC_tau + tau * (AUC_infty - AUC_tau))  AUC_tau","category":"page"},{"location":"parameters/#:Swing","page":"Parameter list","title":":Swing","text":"","category":"section"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"Swing = (C_max - C_tau min)  C_tau min","category":"page"},{"location":"parameters/#:Swingtau","page":"Parameter list","title":":Swingtau","text":"","category":"section"},{"location":"parameters/","page":"Parameter list","title":"Parameter list","text":"Swing_tau = (C_max - C_tau)  C_tau","category":"page"}]
}
